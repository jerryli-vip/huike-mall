<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.supergo.mapper.TbExchangeItemMapper" >
  <resultMap id="BaseResultMap" type="com.supergo.pojo.TbExchangeItem" >
    <id column="exchange_item_id" property="exchangeItemId" jdbcType="INTEGER" />
    <result column="order_item_id" property="orderItemId" jdbcType="INTEGER" />
    <result column="goods_id" property="goodsId" jdbcType="INTEGER" />
    <result column="ordersub_id" property="ordersubId" jdbcType="VARCHAR" />
    <result column="goods_name" property="goodsName" jdbcType="VARCHAR" />
    <result column="recive_name" property="reciveName" jdbcType="VARCHAR" />
    <result column="recive_mobile" property="reciveMobile" jdbcType="VARCHAR" />
    <result column="shop_id" property="shopId" jdbcType="INTEGER" />
    <result column="shop_name" property="shopName" jdbcType="VARCHAR" />
    <result column="sell_price" property="sellPrice" jdbcType="DECIMAL" />
    <result column="actual_payment" property="actualPayment" jdbcType="DECIMAL" />
    <result column="quantity" property="quantity" jdbcType="INTEGER" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="create_id" property="createId" jdbcType="INTEGER" />
    <result column="update_id" property="updateId" jdbcType="INTEGER" />
    <result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />
    <result column="bak1" property="bak1" jdbcType="VARCHAR" />
    <result column="bak2" property="bak2" jdbcType="VARCHAR" />
    <result column="bak3" property="bak3" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    exchange_item_id, order_item_id, goods_id, ordersub_id, goods_name, recive_name, 
    recive_mobile, shop_id, shop_name, sell_price, actual_payment, quantity, create_time, 
    create_id, update_id, update_time, bak1, bak2, bak3
  </sql>
  <select id="selectByGoodsId" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from tb_exchange_item
    where goods_id = #{goodsId,jdbcType=INTEGER}
  </select>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.supergo.pojo.TbExchangeItemExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from tb_exchange_item
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from tb_exchange_item
    where exchange_item_id = #{exchangeItemId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from tb_exchange_item
    where exchange_item_id = #{exchangeItemId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.supergo.pojo.TbExchangeItemExample" >
    delete from tb_exchange_item
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.supergo.pojo.TbExchangeItem" >
    insert into tb_exchange_item (exchange_item_id, order_item_id, goods_id, 
      ordersub_id, goods_name, recive_name, 
      recive_mobile, shop_id, shop_name, 
      sell_price, actual_payment, quantity, 
      create_time, create_id, update_id, 
      update_time, bak1, bak2, 
      bak3)
    values (#{exchangeItemId,jdbcType=INTEGER}, #{orderItemId,jdbcType=INTEGER}, #{goodsId,jdbcType=INTEGER}, 
      #{ordersubId,jdbcType=VARCHAR}, #{goodsName,jdbcType=VARCHAR}, #{reciveName,jdbcType=VARCHAR}, 
      #{reciveMobile,jdbcType=VARCHAR}, #{shopId,jdbcType=INTEGER}, #{shopName,jdbcType=VARCHAR}, 
      #{sellPrice,jdbcType=DECIMAL}, #{actualPayment,jdbcType=DECIMAL}, #{quantity,jdbcType=INTEGER}, 
      #{createTime,jdbcType=TIMESTAMP}, #{createId,jdbcType=INTEGER}, #{updateId,jdbcType=INTEGER}, 
      #{updateTime,jdbcType=TIMESTAMP}, #{bak1,jdbcType=VARCHAR}, #{bak2,jdbcType=VARCHAR}, 
      #{bak3,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.supergo.pojo.TbExchangeItem" >
    insert into tb_exchange_item
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="exchangeItemId != null" >
        exchange_item_id,
      </if>
      <if test="orderItemId != null" >
        order_item_id,
      </if>
      <if test="goodsId != null" >
        goods_id,
      </if>
      <if test="ordersubId != null" >
        ordersub_id,
      </if>
      <if test="goodsName != null" >
        goods_name,
      </if>
      <if test="reciveName != null" >
        recive_name,
      </if>
      <if test="reciveMobile != null" >
        recive_mobile,
      </if>
      <if test="shopId != null" >
        shop_id,
      </if>
      <if test="shopName != null" >
        shop_name,
      </if>
      <if test="sellPrice != null" >
        sell_price,
      </if>
      <if test="actualPayment != null" >
        actual_payment,
      </if>
      <if test="quantity != null" >
        quantity,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="createId != null" >
        create_id,
      </if>
      <if test="updateId != null" >
        update_id,
      </if>
      <if test="updateTime != null" >
        update_time,
      </if>
      <if test="bak1 != null" >
        bak1,
      </if>
      <if test="bak2 != null" >
        bak2,
      </if>
      <if test="bak3 != null" >
        bak3,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="exchangeItemId != null" >
        #{exchangeItemId,jdbcType=INTEGER},
      </if>
      <if test="orderItemId != null" >
        #{orderItemId,jdbcType=INTEGER},
      </if>
      <if test="goodsId != null" >
        #{goodsId,jdbcType=INTEGER},
      </if>
      <if test="ordersubId != null" >
        #{ordersubId,jdbcType=VARCHAR},
      </if>
      <if test="goodsName != null" >
        #{goodsName,jdbcType=VARCHAR},
      </if>
      <if test="reciveName != null" >
        #{reciveName,jdbcType=VARCHAR},
      </if>
      <if test="reciveMobile != null" >
        #{reciveMobile,jdbcType=VARCHAR},
      </if>
      <if test="shopId != null" >
        #{shopId,jdbcType=INTEGER},
      </if>
      <if test="shopName != null" >
        #{shopName,jdbcType=VARCHAR},
      </if>
      <if test="sellPrice != null" >
        #{sellPrice,jdbcType=DECIMAL},
      </if>
      <if test="actualPayment != null" >
        #{actualPayment,jdbcType=DECIMAL},
      </if>
      <if test="quantity != null" >
        #{quantity,jdbcType=INTEGER},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createId != null" >
        #{createId,jdbcType=INTEGER},
      </if>
      <if test="updateId != null" >
        #{updateId,jdbcType=INTEGER},
      </if>
      <if test="updateTime != null" >
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="bak1 != null" >
        #{bak1,jdbcType=VARCHAR},
      </if>
      <if test="bak2 != null" >
        #{bak2,jdbcType=VARCHAR},
      </if>
      <if test="bak3 != null" >
        #{bak3,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.supergo.pojo.TbExchangeItemExample" resultType="java.lang.Integer" >
    select count(*) from tb_exchange_item
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update tb_exchange_item
    <set >
      <if test="record.exchangeItemId != null" >
        exchange_item_id = #{record.exchangeItemId,jdbcType=INTEGER},
      </if>
      <if test="record.orderItemId != null" >
        order_item_id = #{record.orderItemId,jdbcType=INTEGER},
      </if>
      <if test="record.goodsId != null" >
        goods_id = #{record.goodsId,jdbcType=INTEGER},
      </if>
      <if test="record.ordersubId != null" >
        ordersub_id = #{record.ordersubId,jdbcType=VARCHAR},
      </if>
      <if test="record.goodsName != null" >
        goods_name = #{record.goodsName,jdbcType=VARCHAR},
      </if>
      <if test="record.reciveName != null" >
        recive_name = #{record.reciveName,jdbcType=VARCHAR},
      </if>
      <if test="record.reciveMobile != null" >
        recive_mobile = #{record.reciveMobile,jdbcType=VARCHAR},
      </if>
      <if test="record.shopId != null" >
        shop_id = #{record.shopId,jdbcType=INTEGER},
      </if>
      <if test="record.shopName != null" >
        shop_name = #{record.shopName,jdbcType=VARCHAR},
      </if>
      <if test="record.sellPrice != null" >
        sell_price = #{record.sellPrice,jdbcType=DECIMAL},
      </if>
      <if test="record.actualPayment != null" >
        actual_payment = #{record.actualPayment,jdbcType=DECIMAL},
      </if>
      <if test="record.quantity != null" >
        quantity = #{record.quantity,jdbcType=INTEGER},
      </if>
      <if test="record.createTime != null" >
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.createId != null" >
        create_id = #{record.createId,jdbcType=INTEGER},
      </if>
      <if test="record.updateId != null" >
        update_id = #{record.updateId,jdbcType=INTEGER},
      </if>
      <if test="record.updateTime != null" >
        update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.bak1 != null" >
        bak1 = #{record.bak1,jdbcType=VARCHAR},
      </if>
      <if test="record.bak2 != null" >
        bak2 = #{record.bak2,jdbcType=VARCHAR},
      </if>
      <if test="record.bak3 != null" >
        bak3 = #{record.bak3,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update tb_exchange_item
    set exchange_item_id = #{record.exchangeItemId,jdbcType=INTEGER},
      order_item_id = #{record.orderItemId,jdbcType=INTEGER},
      goods_id = #{record.goodsId,jdbcType=INTEGER},
      ordersub_id = #{record.ordersubId,jdbcType=VARCHAR},
      goods_name = #{record.goodsName,jdbcType=VARCHAR},
      recive_name = #{record.reciveName,jdbcType=VARCHAR},
      recive_mobile = #{record.reciveMobile,jdbcType=VARCHAR},
      shop_id = #{record.shopId,jdbcType=INTEGER},
      shop_name = #{record.shopName,jdbcType=VARCHAR},
      sell_price = #{record.sellPrice,jdbcType=DECIMAL},
      actual_payment = #{record.actualPayment,jdbcType=DECIMAL},
      quantity = #{record.quantity,jdbcType=INTEGER},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      create_id = #{record.createId,jdbcType=INTEGER},
      update_id = #{record.updateId,jdbcType=INTEGER},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      bak1 = #{record.bak1,jdbcType=VARCHAR},
      bak2 = #{record.bak2,jdbcType=VARCHAR},
      bak3 = #{record.bak3,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.supergo.pojo.TbExchangeItem" >
    update tb_exchange_item
    <set >
      <if test="orderItemId != null" >
        order_item_id = #{orderItemId,jdbcType=INTEGER},
      </if>
      <if test="goodsId != null" >
        goods_id = #{goodsId,jdbcType=INTEGER},
      </if>
      <if test="ordersubId != null" >
        ordersub_id = #{ordersubId,jdbcType=VARCHAR},
      </if>
      <if test="goodsName != null" >
        goods_name = #{goodsName,jdbcType=VARCHAR},
      </if>
      <if test="reciveName != null" >
        recive_name = #{reciveName,jdbcType=VARCHAR},
      </if>
      <if test="reciveMobile != null" >
        recive_mobile = #{reciveMobile,jdbcType=VARCHAR},
      </if>
      <if test="shopId != null" >
        shop_id = #{shopId,jdbcType=INTEGER},
      </if>
      <if test="shopName != null" >
        shop_name = #{shopName,jdbcType=VARCHAR},
      </if>
      <if test="sellPrice != null" >
        sell_price = #{sellPrice,jdbcType=DECIMAL},
      </if>
      <if test="actualPayment != null" >
        actual_payment = #{actualPayment,jdbcType=DECIMAL},
      </if>
      <if test="quantity != null" >
        quantity = #{quantity,jdbcType=INTEGER},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createId != null" >
        create_id = #{createId,jdbcType=INTEGER},
      </if>
      <if test="updateId != null" >
        update_id = #{updateId,jdbcType=INTEGER},
      </if>
      <if test="updateTime != null" >
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="bak1 != null" >
        bak1 = #{bak1,jdbcType=VARCHAR},
      </if>
      <if test="bak2 != null" >
        bak2 = #{bak2,jdbcType=VARCHAR},
      </if>
      <if test="bak3 != null" >
        bak3 = #{bak3,jdbcType=VARCHAR},
      </if>
    </set>
    where exchange_item_id = #{exchangeItemId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.supergo.pojo.TbExchangeItem" >
    update tb_exchange_item
    set order_item_id = #{orderItemId,jdbcType=INTEGER},
      goods_id = #{goodsId,jdbcType=INTEGER},
      ordersub_id = #{ordersubId,jdbcType=VARCHAR},
      goods_name = #{goodsName,jdbcType=VARCHAR},
      recive_name = #{reciveName,jdbcType=VARCHAR},
      recive_mobile = #{reciveMobile,jdbcType=VARCHAR},
      shop_id = #{shopId,jdbcType=INTEGER},
      shop_name = #{shopName,jdbcType=VARCHAR},
      sell_price = #{sellPrice,jdbcType=DECIMAL},
      actual_payment = #{actualPayment,jdbcType=DECIMAL},
      quantity = #{quantity,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      create_id = #{createId,jdbcType=INTEGER},
      update_id = #{updateId,jdbcType=INTEGER},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      bak1 = #{bak1,jdbcType=VARCHAR},
      bak2 = #{bak2,jdbcType=VARCHAR},
      bak3 = #{bak3,jdbcType=VARCHAR}
    where exchange_item_id = #{exchangeItemId,jdbcType=INTEGER}
  </update>
</mapper>