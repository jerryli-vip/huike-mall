<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.supergo.mapper.TbAuthorityMapper" >
  <resultMap id="BaseResultMap" type="com.supergo.pojo.TbAuthority" >
    <id column="authority_id" property="authorityId" jdbcType="INTEGER" />
    <result column="authority_name" property="authorityName" jdbcType="VARCHAR" />
    <result column="code" property="code" jdbcType="VARCHAR" />
    <result column="authority_description" property="authorityDescription" jdbcType="VARCHAR" />
    <result column="url" property="url" jdbcType="VARCHAR" />
    <result column="type" property="type" jdbcType="INTEGER" />
    <result column="authority_priority" property="authorityPriority" jdbcType="INTEGER" />
    <result column="parent_id" property="parentId" jdbcType="INTEGER" />
    <result column="is_delete" property="isDelete" jdbcType="CHAR" />
    <result column="create_id" property="createId" jdbcType="INTEGER" />
    <result column="update_id" property="updateId" jdbcType="INTEGER" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />
    <result column="bak1" property="bak1" jdbcType="VARCHAR" />
    <result column="bak2" property="bak2" jdbcType="VARCHAR" />
    <result column="bak3" property="bak3" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    authority_id, authority_name, code, authority_description, url, type, authority_priority, 
    parent_id, is_delete, create_id, update_id, create_time, update_time, bak1, bak2, 
    bak3
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.supergo.pojo.TbAuthorityExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from tb_authority
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from tb_authority
    where authority_id = #{authorityId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from tb_authority
    where authority_id = #{authorityId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.supergo.pojo.TbAuthorityExample" >
    delete from tb_authority
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.supergo.pojo.TbAuthority" >
    insert into tb_authority (authority_id, authority_name, code, 
      authority_description, url, type, 
      authority_priority, parent_id, is_delete, 
      create_id, update_id, create_time, 
      update_time, bak1, bak2, 
      bak3)
    values (#{authorityId,jdbcType=INTEGER}, #{authorityName,jdbcType=VARCHAR}, #{code,jdbcType=VARCHAR}, 
      #{authorityDescription,jdbcType=VARCHAR}, #{url,jdbcType=VARCHAR}, #{type,jdbcType=INTEGER}, 
      #{authorityPriority,jdbcType=INTEGER}, #{parentId,jdbcType=INTEGER}, #{isDelete,jdbcType=CHAR}, 
      #{createId,jdbcType=INTEGER}, #{updateId,jdbcType=INTEGER}, #{createTime,jdbcType=TIMESTAMP}, 
      #{updateTime,jdbcType=TIMESTAMP}, #{bak1,jdbcType=VARCHAR}, #{bak2,jdbcType=VARCHAR}, 
      #{bak3,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.supergo.pojo.TbAuthority" >
    insert into tb_authority
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="authorityId != null" >
        authority_id,
      </if>
      <if test="authorityName != null" >
        authority_name,
      </if>
      <if test="code != null" >
        code,
      </if>
      <if test="authorityDescription != null" >
        authority_description,
      </if>
      <if test="url != null" >
        url,
      </if>
      <if test="type != null" >
        type,
      </if>
      <if test="authorityPriority != null" >
        authority_priority,
      </if>
      <if test="parentId != null" >
        parent_id,
      </if>
      <if test="isDelete != null" >
        is_delete,
      </if>
      <if test="createId != null" >
        create_id,
      </if>
      <if test="updateId != null" >
        update_id,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="updateTime != null" >
        update_time,
      </if>
      <if test="bak1 != null" >
        bak1,
      </if>
      <if test="bak2 != null" >
        bak2,
      </if>
      <if test="bak3 != null" >
        bak3,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="authorityId != null" >
        #{authorityId,jdbcType=INTEGER},
      </if>
      <if test="authorityName != null" >
        #{authorityName,jdbcType=VARCHAR},
      </if>
      <if test="code != null" >
        #{code,jdbcType=VARCHAR},
      </if>
      <if test="authorityDescription != null" >
        #{authorityDescription,jdbcType=VARCHAR},
      </if>
      <if test="url != null" >
        #{url,jdbcType=VARCHAR},
      </if>
      <if test="type != null" >
        #{type,jdbcType=INTEGER},
      </if>
      <if test="authorityPriority != null" >
        #{authorityPriority,jdbcType=INTEGER},
      </if>
      <if test="parentId != null" >
        #{parentId,jdbcType=INTEGER},
      </if>
      <if test="isDelete != null" >
        #{isDelete,jdbcType=CHAR},
      </if>
      <if test="createId != null" >
        #{createId,jdbcType=INTEGER},
      </if>
      <if test="updateId != null" >
        #{updateId,jdbcType=INTEGER},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="bak1 != null" >
        #{bak1,jdbcType=VARCHAR},
      </if>
      <if test="bak2 != null" >
        #{bak2,jdbcType=VARCHAR},
      </if>
      <if test="bak3 != null" >
        #{bak3,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.supergo.pojo.TbAuthorityExample" resultType="java.lang.Integer" >
    select count(*) from tb_authority
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update tb_authority
    <set >
      <if test="record.authorityId != null" >
        authority_id = #{record.authorityId,jdbcType=INTEGER},
      </if>
      <if test="record.authorityName != null" >
        authority_name = #{record.authorityName,jdbcType=VARCHAR},
      </if>
      <if test="record.code != null" >
        code = #{record.code,jdbcType=VARCHAR},
      </if>
      <if test="record.authorityDescription != null" >
        authority_description = #{record.authorityDescription,jdbcType=VARCHAR},
      </if>
      <if test="record.url != null" >
        url = #{record.url,jdbcType=VARCHAR},
      </if>
      <if test="record.type != null" >
        type = #{record.type,jdbcType=INTEGER},
      </if>
      <if test="record.authorityPriority != null" >
        authority_priority = #{record.authorityPriority,jdbcType=INTEGER},
      </if>
      <if test="record.parentId != null" >
        parent_id = #{record.parentId,jdbcType=INTEGER},
      </if>
      <if test="record.isDelete != null" >
        is_delete = #{record.isDelete,jdbcType=CHAR},
      </if>
      <if test="record.createId != null" >
        create_id = #{record.createId,jdbcType=INTEGER},
      </if>
      <if test="record.updateId != null" >
        update_id = #{record.updateId,jdbcType=INTEGER},
      </if>
      <if test="record.createTime != null" >
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateTime != null" >
        update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.bak1 != null" >
        bak1 = #{record.bak1,jdbcType=VARCHAR},
      </if>
      <if test="record.bak2 != null" >
        bak2 = #{record.bak2,jdbcType=VARCHAR},
      </if>
      <if test="record.bak3 != null" >
        bak3 = #{record.bak3,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update tb_authority
    set authority_id = #{record.authorityId,jdbcType=INTEGER},
      authority_name = #{record.authorityName,jdbcType=VARCHAR},
      code = #{record.code,jdbcType=VARCHAR},
      authority_description = #{record.authorityDescription,jdbcType=VARCHAR},
      url = #{record.url,jdbcType=VARCHAR},
      type = #{record.type,jdbcType=INTEGER},
      authority_priority = #{record.authorityPriority,jdbcType=INTEGER},
      parent_id = #{record.parentId,jdbcType=INTEGER},
      is_delete = #{record.isDelete,jdbcType=CHAR},
      create_id = #{record.createId,jdbcType=INTEGER},
      update_id = #{record.updateId,jdbcType=INTEGER},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      bak1 = #{record.bak1,jdbcType=VARCHAR},
      bak2 = #{record.bak2,jdbcType=VARCHAR},
      bak3 = #{record.bak3,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.supergo.pojo.TbAuthority" >
    update tb_authority
    <set >
      <if test="authorityName != null" >
        authority_name = #{authorityName,jdbcType=VARCHAR},
      </if>
      <if test="code != null" >
        code = #{code,jdbcType=VARCHAR},
      </if>
      <if test="authorityDescription != null" >
        authority_description = #{authorityDescription,jdbcType=VARCHAR},
      </if>
      <if test="url != null" >
        url = #{url,jdbcType=VARCHAR},
      </if>
      <if test="type != null" >
        type = #{type,jdbcType=INTEGER},
      </if>
      <if test="authorityPriority != null" >
        authority_priority = #{authorityPriority,jdbcType=INTEGER},
      </if>
      <if test="parentId != null" >
        parent_id = #{parentId,jdbcType=INTEGER},
      </if>
      <if test="isDelete != null" >
        is_delete = #{isDelete,jdbcType=CHAR},
      </if>
      <if test="createId != null" >
        create_id = #{createId,jdbcType=INTEGER},
      </if>
      <if test="updateId != null" >
        update_id = #{updateId,jdbcType=INTEGER},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="bak1 != null" >
        bak1 = #{bak1,jdbcType=VARCHAR},
      </if>
      <if test="bak2 != null" >
        bak2 = #{bak2,jdbcType=VARCHAR},
      </if>
      <if test="bak3 != null" >
        bak3 = #{bak3,jdbcType=VARCHAR},
      </if>
    </set>
    where authority_id = #{authorityId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.supergo.pojo.TbAuthority" >
    update tb_authority
    set authority_name = #{authorityName,jdbcType=VARCHAR},
      code = #{code,jdbcType=VARCHAR},
      authority_description = #{authorityDescription,jdbcType=VARCHAR},
      url = #{url,jdbcType=VARCHAR},
      type = #{type,jdbcType=INTEGER},
      authority_priority = #{authorityPriority,jdbcType=INTEGER},
      parent_id = #{parentId,jdbcType=INTEGER},
      is_delete = #{isDelete,jdbcType=CHAR},
      create_id = #{createId,jdbcType=INTEGER},
      update_id = #{updateId,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      bak1 = #{bak1,jdbcType=VARCHAR},
      bak2 = #{bak2,jdbcType=VARCHAR},
      bak3 = #{bak3,jdbcType=VARCHAR}
    where authority_id = #{authorityId,jdbcType=INTEGER}
  </update>
</mapper>