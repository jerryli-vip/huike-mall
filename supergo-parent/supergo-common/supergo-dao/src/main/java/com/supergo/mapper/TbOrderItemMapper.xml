<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.supergo.mapper.TbOrderItemMapper" >
  <resultMap id="BaseResultMap" type="com.supergo.pojo.TbOrderItem" >
    <id column="order_item_id" property="orderItemId" jdbcType="INTEGER" />
    <result column="ordersub_id" property="ordersubId" jdbcType="VARCHAR" />
    <result column="goods_id" property="goodsId" jdbcType="INTEGER" />
    <result column="goods_name" property="goodsName" jdbcType="VARCHAR" />
    <result column="goods_type" property="goodsType" jdbcType="VARCHAR" />
    <result column="sell_price" property="sellPrice" jdbcType="DECIMAL" />
    <result column="actual_payment" property="actualPayment" jdbcType="DECIMAL" />
    <result column="quantity" property="quantity" jdbcType="INTEGER" />
    <result column="discount" property="discount" jdbcType="VARCHAR" />
    <result column="pay_status" property="payStatus" jdbcType="VARCHAR" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />
    <result column="create_id" property="createId" jdbcType="INTEGER" />
    <result column="update_id" property="updateId" jdbcType="INTEGER" />
    <result column="item_status" property="itemStatus" jdbcType="CHAR" />
    <result column="bak2" property="bak2" jdbcType="VARCHAR" />
    <result column="bak3" property="bak3" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    order_item_id, ordersub_id, goods_id, goods_name, goods_type, sell_price, actual_payment, 
    quantity, discount, pay_status, create_time, update_time, create_id, update_id, item_status, 
    bak2, bak3
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.supergo.pojo.TbOrderItemExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from tb_order_item
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap"  parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from tb_order_item
    where goods_id = #{goodsId,jdbcType=INTEGER}
  </select>
  <select id="selectOrderItemById" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from tb_order_item
    where ordersub_id = #{ordersubId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from tb_order_item
    where order_item_id = #{orderItemId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.supergo.pojo.TbOrderItemExample" >
    delete from tb_order_item
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.supergo.pojo.TbOrderItem" >
    insert into tb_order_item (order_item_id, ordersub_id, goods_id, 
      goods_name, goods_type, sell_price, 
      actual_payment, quantity, discount, 
      pay_status, create_time, update_time, 
      create_id, update_id, item_status, 
      bak2, bak3)
    values (#{orderItemId,jdbcType=INTEGER}, #{ordersubId,jdbcType=VARCHAR}, #{goodsId,jdbcType=INTEGER}, 
      #{goodsName,jdbcType=VARCHAR}, #{goodsType,jdbcType=VARCHAR}, #{sellPrice,jdbcType=DECIMAL}, 
      #{actualPayment,jdbcType=DECIMAL}, #{quantity,jdbcType=INTEGER}, #{discount,jdbcType=VARCHAR}, 
      #{payStatus,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP}, 
      #{createId,jdbcType=INTEGER}, #{updateId,jdbcType=INTEGER}, #{itemStatus,jdbcType=CHAR}, 
      #{bak2,jdbcType=VARCHAR}, #{bak3,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.supergo.pojo.TbOrderItem" >
    insert into tb_order_item
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="orderItemId != null" >
        order_item_id,
      </if>
      <if test="ordersubId != null" >
        ordersub_id,
      </if>
      <if test="goodsId != null" >
        goods_id,
      </if>
      <if test="goodsName != null" >
        goods_name,
      </if>
      <if test="goodsType != null" >
        goods_type,
      </if>
      <if test="sellPrice != null" >
        sell_price,
      </if>
      <if test="actualPayment != null" >
        actual_payment,
      </if>
      <if test="quantity != null" >
        quantity,
      </if>
      <if test="discount != null" >
        discount,
      </if>
      <if test="payStatus != null" >
        pay_status,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="updateTime != null" >
        update_time,
      </if>
      <if test="createId != null" >
        create_id,
      </if>
      <if test="updateId != null" >
        update_id,
      </if>
      <if test="itemStatus != null" >
        item_status,
      </if>
      <if test="bak2 != null" >
        bak2,
      </if>
      <if test="bak3 != null" >
        bak3,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="orderItemId != null" >
        #{orderItemId,jdbcType=INTEGER},
      </if>
      <if test="ordersubId != null" >
        #{ordersubId,jdbcType=VARCHAR},
      </if>
      <if test="goodsId != null" >
        #{goodsId,jdbcType=INTEGER},
      </if>
      <if test="goodsName != null" >
        #{goodsName,jdbcType=VARCHAR},
      </if>
      <if test="goodsType != null" >
        #{goodsType,jdbcType=VARCHAR},
      </if>
      <if test="sellPrice != null" >
        #{sellPrice,jdbcType=DECIMAL},
      </if>
      <if test="actualPayment != null" >
        #{actualPayment,jdbcType=DECIMAL},
      </if>
      <if test="quantity != null" >
        #{quantity,jdbcType=INTEGER},
      </if>
      <if test="discount != null" >
        #{discount,jdbcType=VARCHAR},
      </if>
      <if test="payStatus != null" >
        #{payStatus,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createId != null" >
        #{createId,jdbcType=INTEGER},
      </if>
      <if test="updateId != null" >
        #{updateId,jdbcType=INTEGER},
      </if>
      <if test="itemStatus != null" >
        #{itemStatus,jdbcType=CHAR},
      </if>
      <if test="bak2 != null" >
        #{bak2,jdbcType=VARCHAR},
      </if>
      <if test="bak3 != null" >
        #{bak3,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.supergo.pojo.TbOrderItemExample" resultType="java.lang.Integer" >
    select count(*) from tb_order_item
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update tb_order_item
    <set >
      <if test="record.orderItemId != null" >
        order_item_id = #{record.orderItemId,jdbcType=INTEGER},
      </if>
      <if test="record.ordersubId != null" >
        ordersub_id = #{record.ordersubId,jdbcType=VARCHAR},
      </if>
      <if test="record.goodsId != null" >
        goods_id = #{record.goodsId,jdbcType=INTEGER},
      </if>
      <if test="record.goodsName != null" >
        goods_name = #{record.goodsName,jdbcType=VARCHAR},
      </if>
      <if test="record.goodsType != null" >
        goods_type = #{record.goodsType,jdbcType=VARCHAR},
      </if>
      <if test="record.sellPrice != null" >
        sell_price = #{record.sellPrice,jdbcType=DECIMAL},
      </if>
      <if test="record.actualPayment != null" >
        actual_payment = #{record.actualPayment,jdbcType=DECIMAL},
      </if>
      <if test="record.quantity != null" >
        quantity = #{record.quantity,jdbcType=INTEGER},
      </if>
      <if test="record.discount != null" >
        discount = #{record.discount,jdbcType=VARCHAR},
      </if>
      <if test="record.payStatus != null" >
        pay_status = #{record.payStatus,jdbcType=VARCHAR},
      </if>
      <if test="record.createTime != null" >
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateTime != null" >
        update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.createId != null" >
        create_id = #{record.createId,jdbcType=INTEGER},
      </if>
      <if test="record.updateId != null" >
        update_id = #{record.updateId,jdbcType=INTEGER},
      </if>
      <if test="record.itemStatus != null" >
        item_status = #{record.itemStatus,jdbcType=CHAR},
      </if>
      <if test="record.bak2 != null" >
        bak2 = #{record.bak2,jdbcType=VARCHAR},
      </if>
      <if test="record.bak3 != null" >
        bak3 = #{record.bak3,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update tb_order_item
    set order_item_id = #{record.orderItemId,jdbcType=INTEGER},
      ordersub_id = #{record.ordersubId,jdbcType=VARCHAR},
      goods_id = #{record.goodsId,jdbcType=INTEGER},
      goods_name = #{record.goodsName,jdbcType=VARCHAR},
      goods_type = #{record.goodsType,jdbcType=VARCHAR},
      sell_price = #{record.sellPrice,jdbcType=DECIMAL},
      actual_payment = #{record.actualPayment,jdbcType=DECIMAL},
      quantity = #{record.quantity,jdbcType=INTEGER},
      discount = #{record.discount,jdbcType=VARCHAR},
      pay_status = #{record.payStatus,jdbcType=VARCHAR},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      create_id = #{record.createId,jdbcType=INTEGER},
      update_id = #{record.updateId,jdbcType=INTEGER},
      item_status = #{record.itemStatus,jdbcType=CHAR},
      bak2 = #{record.bak2,jdbcType=VARCHAR},
      bak3 = #{record.bak3,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.supergo.pojo.TbOrderItem" >
    update tb_order_item
    <set >
      <if test="ordersubId != null" >
        ordersub_id = #{ordersubId,jdbcType=VARCHAR},
      </if>
      <if test="goodsId != null" >
        goods_id = #{goodsId,jdbcType=INTEGER},
      </if>
      <if test="goodsName != null" >
        goods_name = #{goodsName,jdbcType=VARCHAR},
      </if>
      <if test="goodsType != null" >
        goods_type = #{goodsType,jdbcType=VARCHAR},
      </if>
      <if test="sellPrice != null" >
        sell_price = #{sellPrice,jdbcType=DECIMAL},
      </if>
      <if test="actualPayment != null" >
        actual_payment = #{actualPayment,jdbcType=DECIMAL},
      </if>
      <if test="quantity != null" >
        quantity = #{quantity,jdbcType=INTEGER},
      </if>
      <if test="discount != null" >
        discount = #{discount,jdbcType=VARCHAR},
      </if>
      <if test="payStatus != null" >
        pay_status = #{payStatus,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createId != null" >
        create_id = #{createId,jdbcType=INTEGER},
      </if>
      <if test="updateId != null" >
        update_id = #{updateId,jdbcType=INTEGER},
      </if>
      <if test="itemStatus != null" >
        item_status = #{itemStatus,jdbcType=CHAR},
      </if>
      <if test="bak2 != null" >
        bak2 = #{bak2,jdbcType=VARCHAR},
      </if>
      <if test="bak3 != null" >
        bak3 = #{bak3,jdbcType=VARCHAR},
      </if>
    </set>
    where order_item_id = #{orderItemId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.supergo.pojo.TbOrderItem" >
    update tb_order_item
    set ordersub_id = #{ordersubId,jdbcType=VARCHAR},
      goods_id = #{goodsId,jdbcType=INTEGER},
      goods_name = #{goodsName,jdbcType=VARCHAR},
      goods_type = #{goodsType,jdbcType=VARCHAR},
      sell_price = #{sellPrice,jdbcType=DECIMAL},
      actual_payment = #{actualPayment,jdbcType=DECIMAL},
      quantity = #{quantity,jdbcType=INTEGER},
      discount = #{discount,jdbcType=VARCHAR},
      pay_status = #{payStatus,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      create_id = #{createId,jdbcType=INTEGER},
      update_id = #{updateId,jdbcType=INTEGER},
      item_status = #{itemStatus,jdbcType=CHAR},
      bak2 = #{bak2,jdbcType=VARCHAR},
      bak3 = #{bak3,jdbcType=VARCHAR}
    where order_item_id = #{orderItemId,jdbcType=INTEGER}
  </update>
  <update id="updateStatusByKey" parameterType="java.lang.Integer">
    UPDATE tb_order_item
    SET 
      item_status = ${"7"}
    WHERE 
      goods_id = #{record.goodsId,jdbcType=INTEGER}
  </update>
</mapper>